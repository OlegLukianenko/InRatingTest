// Generated by Dagger (https://google.github.io/dagger).
package inratind.test.application.viewmodel;

import dagger.internal.Factory;
import inratind.test.application.data.repository.RepositoryApi;
import javax.inject.Provider;

public final class StatisticsPostFragmentViewModel_Factory
    implements Factory<StatisticsPostFragmentViewModel> {
  private final Provider<RepositoryApi> repositoryApiProvider;

  public StatisticsPostFragmentViewModel_Factory(Provider<RepositoryApi> repositoryApiProvider) {
    this.repositoryApiProvider = repositoryApiProvider;
  }

  @Override
  public StatisticsPostFragmentViewModel get() {
    return provideInstance(repositoryApiProvider);
  }

  public static StatisticsPostFragmentViewModel provideInstance(
      Provider<RepositoryApi> repositoryApiProvider) {
    StatisticsPostFragmentViewModel instance = new StatisticsPostFragmentViewModel();
    StatisticsPostFragmentViewModel_MembersInjector.injectRepositoryApi(
        instance, repositoryApiProvider.get());
    return instance;
  }

  public static StatisticsPostFragmentViewModel_Factory create(
      Provider<RepositoryApi> repositoryApiProvider) {
    return new StatisticsPostFragmentViewModel_Factory(repositoryApiProvider);
  }

  public static StatisticsPostFragmentViewModel newStatisticsPostFragmentViewModel() {
    return new StatisticsPostFragmentViewModel();
  }
}
