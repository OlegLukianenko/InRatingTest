// Generated by Dagger (https://google.github.io/dagger).
package inratind.test.application.di.home.statisticsPost;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import inratind.test.application.app.home.adapter.MentionsRecyclerAdapter;

public final class StatisticsPostFragmentModule_ProvideMentionsRecyclerAdapterFactory
    implements Factory<MentionsRecyclerAdapter> {
  private final StatisticsPostFragmentModule module;

  public StatisticsPostFragmentModule_ProvideMentionsRecyclerAdapterFactory(
      StatisticsPostFragmentModule module) {
    this.module = module;
  }

  @Override
  public MentionsRecyclerAdapter get() {
    return provideInstance(module);
  }

  public static MentionsRecyclerAdapter provideInstance(StatisticsPostFragmentModule module) {
    return proxyProvideMentionsRecyclerAdapter(module);
  }

  public static StatisticsPostFragmentModule_ProvideMentionsRecyclerAdapterFactory create(
      StatisticsPostFragmentModule module) {
    return new StatisticsPostFragmentModule_ProvideMentionsRecyclerAdapterFactory(module);
  }

  public static MentionsRecyclerAdapter proxyProvideMentionsRecyclerAdapter(
      StatisticsPostFragmentModule instance) {
    return Preconditions.checkNotNull(
        instance.provideMentionsRecyclerAdapter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
