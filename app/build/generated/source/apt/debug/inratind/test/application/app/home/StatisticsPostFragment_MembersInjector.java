// Generated by Dagger (https://google.github.io/dagger).
package inratind.test.application.app.home;

import dagger.MembersInjector;
import inratind.test.application.app.home.adapter.CommentatorsRecyclerAdapter;
import inratind.test.application.app.home.adapter.LikersRecyclerAdapter;
import inratind.test.application.app.home.adapter.MentionsRecyclerAdapter;
import inratind.test.application.utils.NetworkHelper;
import inratind.test.application.viewmodel.StatisticsPostFragmentViewModel;
import javax.inject.Provider;

public final class StatisticsPostFragment_MembersInjector
    implements MembersInjector<StatisticsPostFragment> {
  private final Provider<StatisticsPostFragmentViewModel> viewModelProvider;

  private final Provider<NetworkHelper> networkHelperProvider;

  private final Provider<LikersRecyclerAdapter> userRecyclerAdapterProvider;

  private final Provider<CommentatorsRecyclerAdapter> commentatorsRecyclerAdapterProvider;

  private final Provider<MentionsRecyclerAdapter> mentionsRecyclerAdapterProvider;

  public StatisticsPostFragment_MembersInjector(
      Provider<StatisticsPostFragmentViewModel> viewModelProvider,
      Provider<NetworkHelper> networkHelperProvider,
      Provider<LikersRecyclerAdapter> userRecyclerAdapterProvider,
      Provider<CommentatorsRecyclerAdapter> commentatorsRecyclerAdapterProvider,
      Provider<MentionsRecyclerAdapter> mentionsRecyclerAdapterProvider) {
    this.viewModelProvider = viewModelProvider;
    this.networkHelperProvider = networkHelperProvider;
    this.userRecyclerAdapterProvider = userRecyclerAdapterProvider;
    this.commentatorsRecyclerAdapterProvider = commentatorsRecyclerAdapterProvider;
    this.mentionsRecyclerAdapterProvider = mentionsRecyclerAdapterProvider;
  }

  public static MembersInjector<StatisticsPostFragment> create(
      Provider<StatisticsPostFragmentViewModel> viewModelProvider,
      Provider<NetworkHelper> networkHelperProvider,
      Provider<LikersRecyclerAdapter> userRecyclerAdapterProvider,
      Provider<CommentatorsRecyclerAdapter> commentatorsRecyclerAdapterProvider,
      Provider<MentionsRecyclerAdapter> mentionsRecyclerAdapterProvider) {
    return new StatisticsPostFragment_MembersInjector(
        viewModelProvider,
        networkHelperProvider,
        userRecyclerAdapterProvider,
        commentatorsRecyclerAdapterProvider,
        mentionsRecyclerAdapterProvider);
  }

  @Override
  public void injectMembers(StatisticsPostFragment instance) {
    injectViewModel(instance, viewModelProvider.get());
    injectNetworkHelper(instance, networkHelperProvider.get());
    injectUserRecyclerAdapter(instance, userRecyclerAdapterProvider.get());
    injectCommentatorsRecyclerAdapter(instance, commentatorsRecyclerAdapterProvider.get());
    injectMentionsRecyclerAdapter(instance, mentionsRecyclerAdapterProvider.get());
  }

  public static void injectViewModel(
      StatisticsPostFragment instance, StatisticsPostFragmentViewModel viewModel) {
    instance.viewModel = viewModel;
  }

  public static void injectNetworkHelper(
      StatisticsPostFragment instance, NetworkHelper networkHelper) {
    instance.networkHelper = networkHelper;
  }

  public static void injectUserRecyclerAdapter(
      StatisticsPostFragment instance, LikersRecyclerAdapter userRecyclerAdapter) {
    instance.userRecyclerAdapter = userRecyclerAdapter;
  }

  public static void injectCommentatorsRecyclerAdapter(
      StatisticsPostFragment instance, CommentatorsRecyclerAdapter commentatorsRecyclerAdapter) {
    instance.commentatorsRecyclerAdapter = commentatorsRecyclerAdapter;
  }

  public static void injectMentionsRecyclerAdapter(
      StatisticsPostFragment instance, MentionsRecyclerAdapter mentionsRecyclerAdapter) {
    instance.mentionsRecyclerAdapter = mentionsRecyclerAdapter;
  }
}
